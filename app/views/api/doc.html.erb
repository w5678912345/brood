<fieldset>
<legend><%=  %> API2.0  DOC <%=request.port %></legend>
<a class="btn"><i class=" icon-time"></i><%= time_str Time.now %></a>
<a class="btn"><%= request.remote_ip %></a>
<% if current_user %>

<table class="table table-bordered">
<thead>
<tr>
<th colspan="3">
<!-- bslocked => 交易锁定, disconnect => 掉线(close2小时), exception => 第三方数据异常(close3小时), locked => 帐号锁定, lost => 帐号丢失, </br> 
discard => 永久封停(close120小时和24万小时), NoRmsFile, NoQQToken,bs_unlock_success,bs_unlock_fail -->
</th>
</tr>
<tr>
<th class="span2">URL</th>
<th>Paramters</th>
<th class="span3">Code</th>
</tr>
</thead>
<tbody>
<tr>
<td colspan="2">new API (采用RESTFUL原则重新设计API)</td>
<td rowspan="35">
<ul>
	<% Api::CODES.each do | key, value | %>
	<li><%= value %>  => <%= key %></li>
	<%end%>
</ul>
</td>
</tr>

<tr>
<td colspan="2"></hr></td>
</tr>

<tr>
<th colspan="2">计算机API</th>
</tr>


<tr>
<td>reg.json</td>
<td>注册computer, 参数hostname => 主机名, auth_key => ckey, server => 服务区, version => 版本</td>
</tr>

<tr>
<td>computers/note.json</td>
<td>通过ckey 记录计算机异常，参数：event => 事件, msg => 消息, ckey => 计算机key </td> 
</tr>
<tr>
<td>computers/start.json</td>
<td>通过ckey 启动计算机，参数： msg => 消息, ckey => 计算机key, version => 版本 client_count=>客户端数量,real_name => real name</td> 
</tr>

<tr>
<td>computers/stop.json</td>
<td>通过ckey 停止计算机 msg => 消息, ckey => 计算机key, version => 版本 </td> 
</tr>

<tr>
<th colspan="2">帐号API</th>
</tr>
<tr class="error">
<td>account/role_start_count.json</td>
<td>角色在线数量 参数: ckey => 计算机key, level => 角色等级, target => 副本</td> 
</tr>
<tr class="error">
<td>account/reg.json</td>
<td>注册新账号！ 参数: ckey => 计算机key, id => 账号, pwd=> 密码 ,msg => 消息, remark => 备注</td> 
</tr>
<tr class="info">
<td>account/auto.json</td>
<td>自动搜索一个合适的account在 ckey 对应的computer 上线。参数: ckey => 计算机key, msg => 消息</td> 
</tr>

<tr class="info">
<td>account/start.json</td>
<td>通过 帐号使account在ckey对应的computer上线，参数: id => 账号, ckey => 计算机key  ,msg => 消息 </td>
</tr>

<tr class="info">
<td>account/sync.json</td>
<td>同步API, 参数: id => 账号, rid => 角色ID(null=>true), role的属性 => {server,level,role_index,vit_power,gold,bag_value,start_count,experience}
</td>
</tr>

<tr class="info">
<td>account/note.json</td>
<td>帐号Note. 参数: id => 账号, ckey => 计算机key, status => 状态, event => 事件,  msg => 消息</br>
<b>
status => <%= Account::STATUS.to_s.gsub("\"","") %></br>
event => <%= Account::EVENT.to_s.gsub("\"","") %>
</b>
</td>
</tr>


<tr class="info">
<td>account/stop.json</td>
<td>通过 帐号回收对应account的属性,参数: id => 账号, success => 成功(1表示成功), ckey => 计算机key  ,msg => 消息 </td>
</tr>
<tr class="info">
	<td>account/look.json</td>
	<td>id 查看账号数据</td>
</tr>

<tr class="info">
<td>account/role_start.json</td>
<td>通过id 开始角色，参数：id => 账号, rid => 角色ID ckey => 计算机key </td>
</tr>
<tr class="info">
<td>account/role_note.json</td>
<td>角色Note 参数：id => 账号, rid => 角色ID ckey => 计算机key, status => 状态, event => 事件, ckey =>key, msg => 消息</br>
<b>
status => <%= Role::STATUS.to_s.gsub("\"","") %> </br>
event  => <%= Role::EVENT.to_s.gsub("\"","") %>
</b>
</td>
</tr>

<tr class="info">
<td>account/role_pay.json</td>
<td>参数：id => 账号, rid => 角色ID ckey => 计算机key, gold => 支出金币数, balance => 余额, pay_type => 支出方式, reamrk => 备注(选填)，ckey => 计算机key</td>
</tr>
<tr class="info">
<td>account/role_stop.json</td>
<td>参数：id => 账号, rid => 角色ID ckey => 计算机key, success => 成功(1表示成功) </td>
</tr>
<tr class="">
<td>account/set_rms_file.json</td>
<td>参数：id => 账号, val => 表示是否存在 RMS File(1表示存在，0表示不存在)</td>
</tr>

<tr class="warning">
<td>account/get_unlock.json</td>
<td>得到需要unlock账号, 参数 server 服务器</td>
</tr>

<tr class="warning">
<td>account/get_bslock.json</td>
<td>得到需要解除bslock账号, 参数 server 服务器</td>
</tr>

<tr class="warning">
<td>account/unlock.json</td>
<td>参数：id => 账号, phone_id => 电话号码, result=>结果(normal,recycle),msg=>消息,pwd=>密码 </td>
</tr>


<tr class="warning">
<td>account/upate_attr.json</td>
<td>修改账号属性,参数：id => 账号, status=>状态, server=> 区,pwd=>密码 </td>
</tr>

<tr class="error">
<td>orders/sub.json</td>
<td>提交短信工单 参数：phone_id => 手机号 , account_id => 账号, event => 触发事件, sms => 发送内容 </td>
</tr>
<tr class="error">
<td>orders/:id.json</td>
<td>获取工单信息 参数：id => 工单ID </td>
</tr>
<tr class="error">
<td>orders/end.json</td>
<td>获取工单信息 参数：id => 工单ID, result=> 工单的结果, msg => 消息 </td>
</tr>

<tr>
<th colspan="2">任务API</th>
</tr>

<tr>
<td>tasks/pull.json</td>
<td>通过 ckey 获得该计算机需要执行的任务, ckey => 计算机的key or rid => 角色ID</td> 
</tr>

<tr>
<td>tasks/:id/call.json</td>
<td>通过id 修改任务的执行结果,参数： result => [0=>fail,1=>success] msg => 消息 </td> 
</tr>


<tr>
<th colspan="2">手机相关</th>
</tr>
<tr>
<td>phone/get.json</td>
<td>根据事件 取得可用的手机号,参数 event => 事件<i class="icon-map-marker"></i></td> 
</tr>

<tr class="error">
<td>phone/set_enable.json</td>
<td>启用 或 禁用手机号,参数 no => 手机号码, enable => 1启用，0禁用</td> 
</tr>

<tr class="error">
<td>phone/set_channel_enable.json</td>
<td>启用 或 禁用手机号对应事件的通道,参数 no => 手机号码, event=> 事件(通道类型) ,enable => 1启用，0禁用</td> 
</tr>



<!-- <tr>
<td>phones/get.json</td>
<td>得到可以绑定的手机 与账号 参数 server 服务器</td> 
</tr>
<tr class="warning">
<td>phones/get_unlock.json</td>
<td>得到需要unlock的手机 与账号, 参数 server 服务器</td> 
</tr>
<tr>
<td>phones/bind.json</td>
<td>手机与账号绑定, no => 手机, id => 账号</td> 
</tr>
<tr>
<td>phones/set_can_bind.json</td>
<td>设置手机是否可以绑定, no => 手机, bind => 1表示yes | 0表示no</td> 
</tr>

<tr>
<td>phones/set_can_unlock.json</td>
<td>设置手机是否可以绑定, no => 手机, unlock => 1表示yes | 0表示no</td> 
</tr> 

<tr class="error">
<td>phones/qq_register.json</td>
<td>获取可用于qq注册的手机号码, 返回phone对象的json</td> 
</tr>

<tr class="error">
<td>phones/disable.json</td>
<td>关闭phone对应event的通道 disable 参数 phone_no => 手机号码, event => 事件</td> 
</tr>
-->

<tr>
<td>phones/pull.json</td>
<td>pull phones，参数 name => phone_machine的名称</td> 
</tr>

<tr>
<td>phones/sent.json</td>
<td>修改手机状态为已发送 sent 参数 no => 手机号码, link_id => 通道ID</td> 
</tr>


<tr>
<td>phone_machine/bind_phones.json</td>
<td>将手机关联到指明的机器, name => phone_machine的name,phones => 以逗号分隔的电话号码集</td> 
</tr>

<tr>
<td>phone_machine/shutdown.json</td>
<td>机器停机，修改机器所有号码 enabled = false, name => phone_machine的name</td> 
</tr>

<tr>
<td>phone_machine/can_unlock_accounts.json</td>
<td>获取当前机器可以解绑的号码, name => phone_machine的name,count => 要获取的数量</td> 
</tr>

<tr>
<td>maps/valid.json</td>
<td>根据角色ID，取的一个可用的副本, :level => 指定等级的副本。 如果取到副本返回{"key":副本ID,"name":"副本名称"} 否则返回{"code":-1}</td> 
</tr>

<tr>
	<td>account_task/end.json</td>
	<td>结束账号相关的 短信任务。 id=>账号，event=>事件</td>
</tr>

<tr>
	<td>support_roles.json</td>
	<td>获取对应账号的 帮助角色 account_id 账号</td>
</tr>

</tbody>
</table>
<%end%>
</fieldset>

